name: Update Profile Stats

on:
  schedule:
    - cron: '30 16 * * *'  # 4:30 PM UTC = 10:00 PM IST (Chennai time)
  workflow_dispatch:  # Manual trigger
  push:
    branches: [ main ]
    paths: [ 'scripts/update_stats.py', '.github/workflows/*.yml' ]

# Grant permissions to write to repository
permissions:
  contents: write
  actions: read

jobs:
  update-stats:
    runs-on: ubuntu-latest
    name: Update Coding Platform Stats
    
    steps:
    - name: Checkout repository
      uses: actions/checkout@v4
      with:
        token: ${{ secrets.GITHUB_TOKEN }}
        fetch-depth: 0
        
    - name: Setup Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.11'
        
    - name: Create requirements.txt if not exists
      run: |
        if [ ! -f requirements.txt ]; then
          echo "Creating requirements.txt..."
          cat > requirements.txt << EOF
        requests>=2.31.0
        beautifulsoup4>=4.12.0
        lxml>=4.9.0
        pytz>=2023.3
        EOF
        fi
        
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
        
    - name: Create data directory
      run: mkdir -p data
        
    - name: Update coding platform stats
      run: |
        echo "🚀 Starting daily stats update at $(date) (UTC)"
        echo "🇮🇳 Local Chennai time: $(TZ='Asia/Kolkata' date)"
        python scripts/update_stats.py
      continue-on-error: false
      
    - name: Verify data files and changes
      id: verify-changes
      run: |
        echo "📁 Generated data files:"
        ls -la data/ || echo "No data directory found"
        
        echo "🔍 Checking for any changes..."
        git add -A
        if git diff --staged --quiet; then
          echo "changed=false" >> $GITHUB_OUTPUT
          echo "ℹ️ No changes to commit"
        else
          echo "changed=true" >> $GITHUB_OUTPUT
          echo "✅ Changes detected, ready to commit"
          git diff --staged --name-only
        fi
        
    - name: Display current stats summary
      if: always()
      run: |
        echo "📊 Current Stats Summary:"
        echo "=========================="
        for file in data/*.json; do
          if [ -f "$file" ]; then
            echo "📄 $(basename "$file"):"
            cat "$file" | python -m json.tool 2>/dev/null || echo "⚠️ Invalid JSON in $file"
            echo ""
          fi
        done
        
    - name: Configure Git and Commit Changes
      if: steps.verify-changes.outputs.changed == 'true'
      run: |
        # Configure git
        git config --local user.email "sbbalaganesh2004@gmail.com"
        git config --local user.name "BALA1403"
        
        # Get current timestamp in IST
        TIMESTAMP_UTC=$(date +'%Y-%m-%d %H:%M:%S UTC')
        TIMESTAMP_IST=$(TZ='Asia/Kolkata' date +'%Y-%m-%d %H:%M:%S IST')
        
        # Create commit message with stats summary
        LEETCODE_PROBLEMS="0"
        GFG_PROBLEMS="0"
        HACKERRANK_BADGES="0"
        TOTAL_PROBLEMS="0"
        
        if [ -f data/leetcode_stats.json ]; then
          LEETCODE_PROBLEMS=$(cat data/leetcode_stats.json | python -c "
        import sys, json
        try:
            data=json.load(sys.stdin)
            print(data.get('solved_problems', {}).get('total', 0))
        except:
            print(0)
        " 2>/dev/null)
        fi
        
        if [ -f data/geeksforgeeks_stats.json ]; then
          GFG_PROBLEMS=$(cat data/geeksforgeeks_stats.json | python -c "
        import sys, json
        try:
            data=json.load(sys.stdin)
            print(data.get('problems_solved', 0))
        except:
            print(0)
        " 2>/dev/null)
        fi
        
        if [ -f data/hackerrank_stats.json ]; then
          HACKERRANK_BADGES=$(cat data/hackerrank_stats.json | python -c "
        import sys, json
        try:
            data=json.load(sys.stdin)
            print(data.get('badges', 0))
        except:
            print(0)
        " 2>/dev/null)
        fi
        
        TOTAL_PROBLEMS=$((LEETCODE_PROBLEMS + GFG_PROBLEMS))
        
        # Create detailed commit message with IST time
        COMMIT_MSG="🔄 Daily Stats Update - $TIMESTAMP_IST

        📊 Current Progress:
        • 🔥 LeetCode: $LEETCODE_PROBLEMS problems
        • 🚀 GeeksforGeeks: $GFG_PROBLEMS problems  
        • ⭐ HackerRank: $HACKERRANK_BADGES badges
        • 🎯 Total Problems: $TOTAL_PROBLEMS
        
        🤖 Auto-updated via GitHub Actions
        ⏰ Next update: Tomorrow at 10 PM IST (Chennai)"
        
        # Commit and push
        git commit -m "$COMMIT_MSG"
        git push origin main
        
        echo "✅ Successfully committed and pushed changes!"
        
    - name: Create Action Summary
      if: always()
      run: |
        echo "## 📊 Daily Stats Update Summary" >> $GITHUB_STEP_SUMMARY
        echo "" >> $GITHUB_STEP_SUMMARY
        echo "**Update Time (UTC):** $(date +'%Y-%m-%d %H:%M:%S UTC')" >> $GITHUB_STEP_SUMMARY
        echo "**Update Time (IST):** $(TZ='Asia/Kolkata' date +'%Y-%m-%d %H:%M:%S IST')" >> $GITHUB_STEP_SUMMARY
        echo "" >> $GITHUB_STEP_SUMMARY
        echo "| Platform | Status | Progress |" >> $GITHUB_STEP_SUMMARY
        echo "|----------|--------|----------|" >> $GITHUB_STEP_SUMMARY
        
        # Check each platform
        if [ -f data/leetcode_stats.json ]; then
          LEETCODE_COUNT=$(cat data/leetcode_stats.json | python -c "
        import sys, json
        try:
            data=json.load(sys.stdin)
            total = data.get('solved_problems', {}).get('total', 0)
            easy = data.get('solved_problems', {}).get('easy', 0)
            medium = data.get('solved_problems', {}).get('medium', 0) 
            hard = data.get('solved_problems', {}).get('hard', 0)
            print(f'{total} (E:{easy} M:{medium} H:{hard})')
        except:
            print('0')
        " 2>/dev/null)
          echo "| 🔥 LeetCode | ✅ Success | $LEETCODE_COUNT problems |" >> $GITHUB_STEP_SUMMARY
        else
          echo "| 🔥 LeetCode | ❌ Failed | - |" >> $GITHUB_STEP_SUMMARY
        fi
        
        if [ -f data/geeksforgeeks_stats.json ]; then
          GFG_COUNT=$(cat data/geeksforgeeks_stats.json | python -c "
        import sys, json
        try:
            data=json.load(sys.stdin)
            print(data.get('problems_solved', 0))
        except:
            print(0)
        " 2>/dev/null)
          echo "| 🚀 GeeksforGeeks | ✅ Success | $GFG_COUNT problems |" >> $GITHUB_STEP_SUMMARY
        else
          echo "| 🚀 GeeksforGeeks | ❌ Failed | - |" >> $GITHUB_STEP_SUMMARY
        fi
        
        if [ -f data/hackerrank_stats.json ]; then
          HR_COUNT=$(cat data/hackerrank_stats.json | python -c "
        import sys, json
        try:
            data=json.load(sys.stdin)
            badges = data.get('badges', 0)
            problems = data.get('problems_solved', 0)
            print(f'{badges} badges, {problems} problems')
        except:
            print('0 badges')
        " 2>/dev/null)
          echo "| ⭐ HackerRank | ✅ Success | $HR_COUNT |" >> $GITHUB_STEP_SUMMARY
        else
          echo "| ⭐ HackerRank | ❌ Failed | - |" >> $GITHUB_STEP_SUMMARY
        fi
        
        echo "" >> $GITHUB_STEP_SUMMARY
        echo "**Changes Committed:** $(if [ '${{ steps.verify-changes.outputs.changed }}' = 'true' ]; then echo '✅ Yes'; else echo '❌ No'; fi)" >> $GITHUB_STEP_SUMMARY
        echo "" >> $GITHUB_STEP_SUMMARY
        echo "**🇮🇳 Scheduled for:** Daily at 10:00 PM IST (Chennai Time)" >> $GITHUB_STEP_SUMMARY
        echo "" >> $GITHUB_STEP_SUMMARY
        echo "🔗 [View Repository](https://github.com/${{ github.repository }})"